From 8b45314ffdc0f6147b66eb55659cc9d4faad6fb1 Mon Sep 17 00:00:00 2001
From: Matthijs van Duin <matthijsvanduin@gmail.com>
Date: Tue, 17 Apr 2018 13:53:54 +0200
Subject: [PATCH] cpts: fix cpts_systim_read failures

---
 drivers/net/ethernet/ti/cpts.c | 43 ++++++++++++++++++------------------------
 1 file changed, 18 insertions(+), 25 deletions(-)

diff --git a/drivers/net/ethernet/ti/cpts.c b/drivers/net/ethernet/ti/cpts.c
index 15cb390af52f..c02f835e9321 100644
--- a/drivers/net/ethernet/ti/cpts.c
+++ b/drivers/net/ethernet/ti/cpts.c
@@ -126,12 +126,9 @@ static bool cpts_match_tx_ts(struct cpts *cpts, u32 high, u32 low)
 	return found;
 }
 
-/*
- * Returns zero if matching event type was found.
- */
-static int cpts_fifo_read(struct cpts *cpts, int match)
+static int cpts_fifo_read(struct cpts *cpts, u32 *push_ts)
 {
-	int i, type = -1;
+	int i, type;
 	u32 hi, lo;
 
 	for (i = 0; i < CPTS_FIFO_DEPTH; i++) {
@@ -147,10 +144,17 @@ static int cpts_fifo_read(struct cpts *cpts, int match)
 				 */
 				break;
 			}
-		case CPTS_EV_PUSH:
+			/* fall-through */
 		case CPTS_EV_RX:
 			cpts_queue_event(cpts, hi, lo);
 			break;
+		case CPTS_EV_PUSH:
+			if (push_ts) {
+				*push_ts = lo;
+				return 1;
+			}
+			pr_err("cpts: unexpected push event\n");
+			break;
 		case CPTS_EV_ROLL:
 		case CPTS_EV_HALF:
 		case CPTS_EV_HW:
@@ -159,32 +163,21 @@ static int cpts_fifo_read(struct cpts *cpts, int match)
 			pr_err("cpts: unknown event type\n");
 			break;
 		}
-		if (type == match)
-			break;
 	}
-	return type == match ? 0 : -1;
+	return 0;
 }
 
 static u64 cpts_systim_read(const struct cyclecounter *cc)
 {
-	u64 val = 0;
-	struct cpts_event *event;
-	struct list_head *this, *next;
+	u32 val = 0;
 	struct cpts *cpts = container_of(cc, struct cpts, cc);
 
-	cpts_write32(cpts, TS_PUSH, ts_push);
-	if (cpts_fifo_read(cpts, CPTS_EV_PUSH))
-		pr_err("cpts: unable to obtain a time stamp\n");
+	// clean up the hardware fifo first to avoid overflow
+	cpts_fifo_read(cpts, NULL);
 
-	list_for_each_safe(this, next, &cpts->events) {
-		event = list_entry(this, struct cpts_event, list);
-		if (event_type(event) == CPTS_EV_PUSH) {
-			list_del_init(&event->list);
-			list_add(&event->list, &cpts->pool);
-			val = event->low;
-			break;
-		}
-	}
+	cpts_write32(cpts, TS_PUSH, ts_push);
+	if (!cpts_fifo_read(cpts, &val))
+		pr_err("cpts: unable to obtain a time stamp\n");
 
 	return val;
 }
@@ -352,7 +345,7 @@ static u64 cpts_find_ts(struct cpts *cpts, struct sk_buff *skb, int ev_type)
 		return 0;
 
 	spin_lock_irqsave(&cpts->lock, flags);
-	cpts_fifo_read(cpts, -1);
+	cpts_fifo_read(cpts, NULL);
 	list_for_each_safe(this, next, &cpts->events) {
 		event = list_entry(this, struct cpts_event, list);
 		if (event_expired(event)) {
-- 
2.16.2

