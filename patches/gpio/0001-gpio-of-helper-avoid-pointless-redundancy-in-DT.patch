From 12d566e6d32d7a980f8ddc62d5cad9c5a591e201 Mon Sep 17 00:00:00 2001
From: Matthijs van Duin <matthijsvanduin@gmail.com>
Date: Wed, 3 Aug 2016 12:21:06 +0200
Subject: [PATCH] gpio-of-helper: avoid pointless redundancy in DT

If 'init-low' or 'init-high' is specified, 'output' is implicit.

As in gpio hogs, use an optional 'line-name' property to label the gpio,
defaulting to the DT node name.  The previous 'gpio-name' property is
still supported for backwards compatibility.

Signed-off-by: Matthijs van Duin <matthijsvanduin@gmail.com>
---
 drivers/gpio/gpio-of-helper.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/gpio/gpio-of-helper.c b/drivers/gpio/gpio-of-helper.c
index a9f260bd2fee..a7e85f381be6 100644
--- a/drivers/gpio/gpio-of-helper.c
+++ b/drivers/gpio/gpio-of-helper.c
@@ -139,7 +139,9 @@ gpio_of_entry_create(struct gpio_of_helper_info *info,
 	/* get the type of the node first */
 	if (of_property_read_bool(node, "input"))
 		type = GPIO_TYPE_INPUT;
-	else if (of_property_read_bool(node, "output"))
+	else if (of_property_read_bool(node, "output")
+			|| of_property_read_bool(node, "init-low")
+			|| of_property_read_bool(node, "init-high"))
 		type = GPIO_TYPE_OUTPUT;
 	else {
 		dev_err(dev, "Not valid gpio node type\n");
@@ -148,11 +150,9 @@ gpio_of_entry_create(struct gpio_of_helper_info *info,
 	}
 
 	/* get the name */
-	err = of_property_read_string(node, "gpio-name", &name);
-	if (err != 0) {
-		dev_err(dev, "Failed to get name property\n");
-		goto err_bad_node;
-	}
+	if (of_property_read_string(node, "line-name", &name))
+		if (of_property_read_string(node, "gpio-name", &name))
+			name = node->name;
 
 	err = of_get_named_gpio_flags(node, "gpio", 0, &gpio_flags);
 	if (IS_ERR_VALUE(err)) {
-- 
2.9.3

