From 52f88f024d0f7c6d86dc2d9ecaceab68e062259a Mon Sep 17 00:00:00 2001
From: Matthijs van Duin <matthijsvanduin@gmail.com>
Date: Wed, 27 Nov 2019 20:32:57 +0100
Subject: [PATCH 1/2] pinctrl: add getters for state and state name

Signed-off-by: Matthijs van Duin <matthijsvanduin@gmail.com>
---
 drivers/pinctrl/core.c           | 20 ++++++++++++++++++++
 include/linux/pinctrl/consumer.h | 12 ++++++++++++
 2 files changed, 32 insertions(+)

diff --git a/drivers/pinctrl/core.c b/drivers/pinctrl/core.c
index c55517312485..0f7739f98b01 100644
--- a/drivers/pinctrl/core.c
+++ b/drivers/pinctrl/core.c
@@ -1188,6 +1188,26 @@ struct pinctrl_state *pinctrl_lookup_state(struct pinctrl *p,
 }
 EXPORT_SYMBOL_GPL(pinctrl_lookup_state);
 
+/**
+ * pinctrl_state_get_name() - get name of a pinctrl state
+ * @state: the state handle
+ */
+const char *pinctrl_state_get_name(struct pinctrl_state *state)
+{
+	return state ? state->name : NULL;
+}
+EXPORT_SYMBOL_GPL(pinctrl_state_get_name);
+
+/**
+ * pinctrl_get_state() - get current pinctrl state
+ * @p: the pinctrl handle to retrieve the state from
+ */
+struct pinctrl_state *pinctrl_get_state(struct pinctrl *p)
+{
+	return p ? p->state : NULL;
+}
+EXPORT_SYMBOL_GPL(pinctrl_get_state);
+
 /**
  * pinctrl_commit_state() - select/activate/program a pinctrl state to HW
  * @p: the pinctrl handle for the device that requests configuration
diff --git a/include/linux/pinctrl/consumer.h b/include/linux/pinctrl/consumer.h
index a0f2aba72fa9..b0592a3d4b9c 100644
--- a/include/linux/pinctrl/consumer.h
+++ b/include/linux/pinctrl/consumer.h
@@ -37,6 +37,8 @@ extern struct pinctrl_state * __must_check pinctrl_lookup_state(
 							struct pinctrl *p,
 							const char *name);
 extern int pinctrl_select_state(struct pinctrl *p, struct pinctrl_state *s);
+extern struct pinctrl_state *pinctrl_get_state(struct pinctrl *p);
+extern const char *pinctrl_state_get_name(struct pinctrl_state *state);
 
 extern struct pinctrl * __must_check devm_pinctrl_get(struct device *dev);
 extern void devm_pinctrl_put(struct pinctrl *p);
@@ -108,6 +110,16 @@ static inline int pinctrl_select_state(struct pinctrl *p,
 	return 0;
 }
 
+static struct pinctrl_state *pinctrl_get_state(struct pinctrl *p)
+{
+	return NULL;
+}
+
+static const char *pinctrl_state_get_name(struct pinctrl_state *state)
+{
+	return NULL;
+}
+
 static inline struct pinctrl * __must_check devm_pinctrl_get(struct device *dev)
 {
 	return NULL;
-- 
2.20.1

